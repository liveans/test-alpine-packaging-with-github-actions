name: Alpine Linux Packages

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - master
    - release/*
  pull_request:
    branches:
    - main
    - master
    - release/*

concurrency:
  # Cancel any workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: package-linux-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build-alpine-packages:
    name: Generate Alpine Packages
    needs: []
    strategy:
      fail-fast: false
      matrix:
        vec: [
          { friendlyName: "Alpine 3.20 x64", config: "Release", os: "alpine-3.20", arch: "x64", tls: "openssl3", image: "mcr.microsoft.com/dotnet/sdk:8.0-alpine3.20-amd64" },
          # { friendlyName: "Alpine 3.20 ARM64", config: "Release", os: "alpine-3.20", arch: "arm64", tls: "openssl3", image: "mcr.microsoft.com/dotnet/sdk:8.0-alpine3.20-arm64v8" },
          # { friendlyName: "Alpine 3.20 ARM32", config: "Release", os: "alpine-3.20", arch: "arm", tls: "openssl3", image: "mcr.microsoft.com/dotnet/sdk:8.0-alpine3.20-arm32v7" },
        ]
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.vec.image }}
      env:
        REPO_TAR_URL: ${{ github.api_url }}/repos/${{ github.repository }}/tarball/${{ github.sha }}
        TARGETARCH: ${{ matrix.vec.arch }}
    steps:
    - name: Get Files
      run: |
        wget -O APKBUILD $REPO_URL/packaging/github-actions/APKBUILD
        wget $REPO_URL/scripts/alpine-configure-packaging-key.sh
        wget $REPO_URL/scripts/alpine-packaging-prepare-script.sh
      env:
        REPO_URL: https://raw.githubusercontent.com/${{ github.repository }}/${{ github.sha }}

    - name: Prepare Image for Packaging # This step is needed only for testing the package.
      run: |
        chmod +x alpine-configure-packaging-key.sh
        chmod +x alpine-packaging-prepare-script.sh
        ./alpine-packaging-prepare-script.sh
    
    - name: Generate Keys for Test Packaging
      run: |
        su packaging -c abuild-keygen -n
        find /home/packaging/.abuild -name '*.rsa' -exec ./alpine-configure-packaging-key.sh {} \;

    - name: Build Package
      run: |
        su packaging -c abuild -r

    - name: Upload Package
      run: |
        find /home/packaging/packages -name '*.apk' -exec cp {} /github/workspace \;
        find /home/packaging/packages -name '*.rsa.pub' -exec cp {} /github/workspace \;

  