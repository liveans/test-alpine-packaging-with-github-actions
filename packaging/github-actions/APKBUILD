# Contributor: Microsoft QUIC Team <quicdev@microsoft.com>
# Maintainer: Microsoft QUIC Team <quicdev@microsoft.com>

pkgname=libmsquic
pkgver=2.5.0
pkgrel=0
pkgdesc="Cross-platform, C implementation of the IETF QUIC protocol, exposed to C, C++, C# and Rust."
url="https://github.com/microsoft/msquic"
arch="x86_64 armhf aarch64"
license="MIT"
depends="" # Shared object dependencies are automatically detected by the package manager.

builddir="$srcdir/"
makedepends="cmake g++ gcc git numactl-dev linux-headers lttng-ust-dev make musl-dev openssl-dev"
checkdepends="perf"

_giturl="$REPO"
_gittag="$SHA"

# Should not be used for PR packaging
# _disturl="dev.alpinelinux.org:/archive/$pkgname/"

_disturl="/home/packaging/github-actions/packages"
tar_name="$pkgname-$pkgver.tar.xz"
source="$_disturl/$pkgname-$pkgver.tar.xz"

snapshot() {
    clean
    deps
    mkdir -p "$srcdir"
    cd "${SRCDEST:-$srcdir}"
    git clone --recursive $_giturl $pkgname || return 1
    cd $pkgname
    git reset --hard $_gittag # Get specific commit
    tar cv $pkgname | xz -T0 -9 -vv - > $SRCDEST/$tar_name
    cp $SRCDEST/$tar_name $_disturl
}

build() {
        cd $builddir
        cmake -B build/linux/Release \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_TARGET_ARCHITECTURE=${TARGETARCH} \
                -DQUIC_TLS=openssl3 \
                -DQUIC_ENABLE_LOGGING=true \
                -DQUIC_USE_SYSTEM_LIBCRYPTO=true \
                -DQUIC_BUILD_TOOLS=off \
                -DQUIC_BUILD_TEST=on \
                -DQUIC_BUILD_PERF=off
        cmake --build build/linux/Release  --config Release
}

check() {
        # TODO : Run tests with packaging
        cd $builddir/build/linux/Release
        ctest --output-on-failure || return 1
}

package() {
        mkdir -p "$pkgdir"
        cmake --install build/linux/Release --prefix $pkgdir
}
